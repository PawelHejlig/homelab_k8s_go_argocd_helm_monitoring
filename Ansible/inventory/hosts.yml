# inventory/hosts.yml - Ansible inventory for local multi-node setup

---
all:
  vars:
    # Global variables for all hosts
    ansible_user: "{{ ansible_env.USER | default(lookup('env', 'USER')) }}"
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    
    # Project configuration
    project_name: "homelab-devops"
    project_dir: "{{ ansible_env.PWD }}"
    
    # K3s configuration
    k3s_version: "v1.28.5+k3s1"
    k3s_data_dir_master: "/var/lib/k3s-master"
    k3s_data_dir_worker: "/var/lib/k3s-worker"
    
    # System configuration
    system_timezone: "Europe/Warsaw"
    golang_version: "1.21.5"
    
    # Security settings
    ufw_enabled: true
    ssh_hardening: true
    auto_updates: true
    
    # Monitoring configuration
    install_monitoring_agents: true
    prometheus_port: 9090
    grafana_port: 3000
    
    # Application configuration
    app_namespace: "homelab"
    monitoring_namespace: "monitoring"
    argocd_namespace: "argocd"

  children:
    # Logical grouping for different node types
    k3s_cluster:
      children:
        k3s_masters:
        k3s_workers:
    
    # Physical grouping (single laptop with virtual nodes)
    localhost_nodes:
      hosts:
        localhost:
          # This represents your laptop running both master and worker
          ansible_host: localhost
          ansible_connection: local
          
          # Node configuration
          node_roles:
            - master
            - worker
          
          # Resource allocation
          master_memory_limit: "6Gi"
          worker_memory_limit: "6Gi"
          master_cpu_limit: "2"
          worker_cpu_limit: "2"
          
          # Service configuration
          services:
            - k3s-master
            - k3s-worker
          
          # Storage configuration
          storage_class: "local-path"
          persistent_volumes:
            - name: "prometheus-data"
              size: "10Gi"
              path: "/var/lib/k3s-storage/prometheus"
            - name: "grafana-data"
              size: "5Gi"
              path: "/var/lib/k3s-storage/grafana"
            - name: "postgres-data"
              size: "5Gi"
              path: "/var/lib/k3s-storage/postgres"

    # Logical master nodes (maps to localhost)
    k3s_masters:
      hosts:
        k3s-master:
          ansible_host: localhost
          ansible_connection: local
          node_type: master
          node_name: k3s-master
          node_labels:
            node-type: master
            node-role.kubernetes.io/control-plane: "true"
          node_taints:
            - key: "node-role.kubernetes.io/control-plane"
              value: "true"
              effect: "NoSchedule"

    # Logical worker nodes (maps to localhost)
    k3s_workers:
      hosts:
        k3s-worker:
          ansible_host: localhost
          ansible_connection: local
          node_type: worker
          node_name: k3s-worker
          node_labels:
            node-type: worker
            node-role.kubernetes.io/worker: "true"

    # Environment-specific groupings
    development:
      hosts:
        localhost:
      vars:
        environment: "dev"
        log_level: "debug"
        monitoring_retention: "7d"
        backup_retention: "3d"

    # Future expansion - if you add actual VMs
    # virtual_machines:
    #   hosts:
    #     vm-master:
    #       ansible_host: 192.168.122.10
    #       ansible_user: ubuntu
    #       node_type: master
    #     vm-worker-1:
    #       ansible_host: 192.168.122.11
    #       ansible_user: ubuntu
    #       node_type: worker
    #     vm-worker-2:
    #       ansible_host: 192.168.122.12
    #       ansible_user: ubuntu
    #       node_type: worker
