apiVersion: v1
kind: Service
metadata:
  name: vault-internal
  namespace: vault
spec:
  clusterIP: None
  selector:
    app: vault
  ports:
    - name: http
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault
spec:
  serviceName: "vault-internal"
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: vault
      initContainers:
      - name: vault-init
        image: busybox:1.35
        command: ['sh', '-c', 'chown -R 100:1000 /vault/data && chmod -R 755 /vault/data']
        volumeMounts:
        - name: vault-storage
          mountPath: /vault/data
        securityContext:
          runAsUser: 0
      securityContext:
        runAsUser: 100
        fsGroup: 1000
      containers:
      - name: vault
        image: hashicorp/vault:latest
        args: ["vault", "server", "-config=/vault/config/vault.hcl"]
        ports:
        - containerPort: 8200
          name: vault-port
        - containerPort: 8201
          name: cluster-port
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_API_ADDR
          value: "http://$(POD_IP):8200"
        - name: VAULT_CLUSTER_ADDR
          value: "http://$(POD_IP):8201"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SKIP_SETCAP
          value: "true"
        volumeMounts:
        - name: vault-storage
          mountPath: /vault/data
        - name: vault-config
          mountPath: /vault/config
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
        readinessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true&sealedcode=200&uninitcode=200
            port: 8200
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true&sealedcode=200&uninitcode=200
            port: 8200
          initialDelaySeconds: 30
          periodSeconds: 30

      # Optional: Manual unsealer that uses external secret
      # Remove this section if you prefer manual unsealing
      - name: vault-unsealer
        image: hashicorp/vault:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Vault unsealer starting..."
          while true; do
            # Check if keys secret exists
            if [ ! -f /vault/keys/key1 ]; then
              echo "No unseal keys found, skipping auto-unseal"
              sleep 300
              continue
            fi
            
            # Check seal status
            SEALED=$(wget -qO- http://127.0.0.1:8200/v1/sys/seal-status 2>/dev/null | grep -o '"sealed":[^,}]*' | cut -d: -f2 | tr -d ' "' || echo "true")
            
            if [ "$SEALED" = "true" ]; then
              echo "Vault is sealed, attempting to unseal..."
              vault operator unseal "$(cat /vault/keys/key1)" || true
              vault operator unseal "$(cat /vault/keys/key2)" || true
              vault operator unseal "$(cat /vault/keys/key3)" || true
            fi
            
            sleep 60
          done
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        volumeMounts:
        - name: vault-unseal-keys
          mountPath: /vault/keys
          readOnly: true
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"

      volumes:
      - name: vault-config
        configMap:
          name: vault-config
      # Only mount unseal keys if the secret exists
      # Create this secret manually with: kubectl create secret generic vault-unseal-keys-secure
      - name: vault-unseal-keys
        secret:
          secretName: vault-unseal-keys
          optional: true  # Don't fail if secret doesn't exist

  volumeClaimTemplates:
  - metadata:
      name: vault-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
