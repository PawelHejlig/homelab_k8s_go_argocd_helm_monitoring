apiVersion: v1
kind: ConfigMap
metadata:
  name: zabbix-agent-config
  namespace: zabbix
  labels:
    app: zabbix-agent
    component: monitoring
data:
  zabbix_agent2.conf: |
    # Zabbix Agent 2 Configuration
    Server=zabbix-zabbix-server.zabbix.svc.cluster.local,10.42.0.0/16,192.168.88.0/24
    ServerActive=zabbix-zabbix-server.zabbix.svc.cluster.local:10051
    Hostname=homelab1
    ListenPort=10050
    
    # Logging
    LogType=console
    DebugLevel=3
    
    # Performance settings
    Timeout=30
    
  kubernetes-monitoring.conf: |
    # Kubernetes Cluster Monitoring Parameters
    
    # Pod monitoring
    UserParameter=k8s.pods.running,kubectl get pods --all-namespaces --field-selector=status.phase=Running --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pods.total,kubectl get pods --all-namespaces --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pods.pending,kubectl get pods --all-namespaces --field-selector=status.phase=Pending --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pods.failed,kubectl get pods --all-namespaces --field-selector=status.phase=Failed --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pods.succeeded,kubectl get pods --all-namespaces --field-selector=status.phase=Succeeded --no-headers 2>/dev/null | wc -l || echo "0"
    
    # Pod monitoring by namespace
    UserParameter=k8s.pods.namespace[*],kubectl get pods -n $1 --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pods.running.namespace[*],kubectl get pods -n $1 --field-selector=status.phase=Running --no-headers 2>/dev/null | wc -l || echo "0"
    
    # Node monitoring
    UserParameter=k8s.nodes.total,kubectl get nodes --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.nodes.ready,kubectl get nodes --no-headers 2>/dev/null | grep -c " Ready " || echo "0"
    UserParameter=k8s.nodes.notready,kubectl get nodes --no-headers 2>/dev/null | grep -c " NotReady " || echo "0"
    
    # Service monitoring
    UserParameter=k8s.services.total,kubectl get services --all-namespaces --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.services.nodeport,kubectl get services --all-namespaces -o jsonpath='{.items[?(@.spec.type=="NodePort")].metadata.name}' 2>/dev/null | wc -w || echo "0"
    UserParameter=k8s.services.loadbalancer,kubectl get services --all-namespaces -o jsonpath='{.items[?(@.spec.type=="LoadBalancer")].metadata.name}' 2>/dev/null | wc -w || echo "0"
    
    # Deployment monitoring
    UserParameter=k8s.deployments.total,kubectl get deployments --all-namespaces --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.deployments.available,kubectl get deployments --all-namespaces -o jsonpath='{.items[?(@.status.availableReplicas>0)].metadata.name}' 2>/dev/null | wc -w || echo "0"
    
    # Storage monitoring
    UserParameter=k8s.pv.total,kubectl get pv --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.pv.available,kubectl get pv --no-headers 2>/dev/null | grep -c Available || echo "0"
    UserParameter=k8s.pvc.total,kubectl get pvc --all-namespaces --no-headers 2>/dev/null | wc -l || echo "0"
    
    # Namespace monitoring
    UserParameter=k8s.namespaces.total,kubectl get namespaces --no-headers 2>/dev/null | wc -l || echo "0"
    
    # Events monitoring (last 1 hour)
    UserParameter=k8s.events.warning,kubectl get events --all-namespaces --field-selector type=Warning --no-headers 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.events.normal,kubectl get events --all-namespaces --field-selector type=Normal --no-headers 2>/dev/null | wc -l || echo "0"
    
    # Your specific services health monitoring
    UserParameter=service.argocd.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30080/ 2>/dev/null || echo "0"
    UserParameter=service.grafana.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:32000/ 2>/dev/null || echo "0"
    UserParameter=service.prometheus.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30090/ 2>/dev/null || echo "0"
    UserParameter=service.kibana.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30056/ 2>/dev/null || echo "0"
    UserParameter=service.nginx.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30081/ 2>/dev/null || echo "0"
    UserParameter=service.vault.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30082/ 2>/dev/null || echo "0"
    UserParameter=service.zabbix.health,curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 http://127.0.0.1:30083/ 2>/dev/null || echo "0"
    
    # Container runtime monitoring
    UserParameter=k8s.containers.running,crictl ps --state running -q 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.containers.total,crictl ps -a -q 2>/dev/null | wc -l || echo "0"
    UserParameter=k8s.images.total,crictl images -q 2>/dev/null | wc -l || echo "0"
