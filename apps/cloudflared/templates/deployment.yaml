apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflared.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloudflared.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflared.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "cloudflared.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cloudflared.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: cloudflared
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - cloudflared
          - tunnel
          - --no-autoupdate
          - --metrics
          - 0.0.0.0:2000
          - run
          {{- if .Values.cloudflared.existingSecret }}
          - --token-file
          - /etc/cloudflared/token
          {{- else }}
          - --token
          - $(TUNNEL_TOKEN)
          {{- end }}
        {{- if not .Values.cloudflared.existingSecret }}
        env:
        - name: TUNNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "cloudflared.fullname" . }}-token
              key: token
        {{- end }}
        ports:
        - name: metrics
          containerPort: 2000
          protocol: TCP
        {{- if .Values.cloudflared.existingSecret }}
        volumeMounts:
        - name: token
          mountPath: /etc/cloudflared
          readOnly: true
        {{- end }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            {{- toYaml .Values.probes.liveness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            {{- toYaml .Values.probes.readiness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        {{- end }}
      {{- if .Values.cloudflared.existingSecret }}
      volumes:
      - name: token
        secret:
          secretName: {{ .Values.cloudflared.existingSecret }}
          items:
          - key: {{ .Values.cloudflared.existingSecretKey | default "token" }}
            path: token
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
