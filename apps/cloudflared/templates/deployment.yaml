# Fixed deployment.yaml template
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflared.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloudflared.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflared.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "cloudflared.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cloudflared.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: cloudflared
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # FIXED: Use only args, not command + args
        args:
          - /bin/sh
          - -c
          - |
            # Source the Vault-injected config file
            if [ -f /vault/secrets/config ]; then
              . /vault/secrets/config
            else
              echo "ERROR: Vault secret not found at /vault/secrets/config"
              exit 1
            fi
            
            # Check if token is set
            if [ -z "$TUNNEL_TOKEN" ]; then
              echo "ERROR: TUNNEL_TOKEN not set"
              exit 1
            fi
            
            # Start cloudflared
            exec cloudflared tunnel --no-autoupdate --metrics 0.0.0.0:2000 run --token "$TUNNEL_TOKEN"
        ports:
        - name: metrics
          containerPort: 2000
          protocol: TCP
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            {{- toYaml .Values.probes.liveness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            {{- toYaml .Values.probes.readiness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        {{- end }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
