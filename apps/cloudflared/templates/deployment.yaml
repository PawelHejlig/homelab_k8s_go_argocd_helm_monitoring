apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflared.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloudflared.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflared.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/role: "cloudflared"
      vault.hashicorp.com/agent-inject-secret-tunnel-token: "cloudflared/data/cloudflared"
      vault.hashicorp.com/agent-inject-template-tunnel-token: |
        {{- with secret "cloudflared/data/cloudflared" -}}
        {{ .Data.data.token }}
        {{- end }}
      labels:
        {{- include "cloudflared.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cloudflared.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: cloudflared
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: 
          - cloudflared
          - tunnel
          - --no-autoupdate 
          - --metrics
          - 0.0.0.0:2000
          - run
        env:
        - name: TUNNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "cloudflared.fullname" . }}-token
              key: token
        - name: TUNNEL_TOKEN_FILE
          value: "/tmp/token"
        volumeMounts:
        - name: token-volume
          mountPath: /tmp/token
          subPath: token
          readOnly: true
        ports:
        - name: metrics
          containerPort: 2000
          protocol: TCP
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            {{- toYaml .Values.probes.liveness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            {{- toYaml .Values.probes.readiness.httpGet | nindent 12 }}
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        {{- end }}
      volumes:
      - name: token-volume
        secret:
          secretName: {{ include "cloudflared.fullname" . }}-token
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
